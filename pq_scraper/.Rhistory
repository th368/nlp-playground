c <- 0.05
fv <- 100
m <- 2
n <- 1
cr <- (fv*c)/m
r <- 0.005
v <- (1+(r/m))^-(m*n)
a <- (1-v)/(r/m)
#final output
cr*a+fv*v
cr*a
fv*v
cr*a+fv*v
#1 year bond
p <- 14.2262
c <- 0.05
fv <- 100
m <- 2
n <- 1
cr <- (fv*c)/m
r <- 0.01
v <- (1+(r/m))^-(m*n)
a <- (1-v)/(r/m)
#final output
cr*a+fv*v
cr*a
fv*v
tput
cr*a+fv*v
r1 <- 0.005
r2 <- 0.01
pv1 <- 104.4832
pv2 <- 103.9702
p <- 104.2262
top <- pv1-p
bot <- pv1-pv2
r1+(r2-r1)*(top/bot)
p <- 106.1975
c <- 0.05
fv <- 100
m <- 2
n <- 2
cr <- (fv*c)/m
r <- 0.01
v <- (1+(r/m))^-(m*n)
a <- (1-v)/(r/m)
cr*a
fv*v
cr*a+fv*v
p <- 106.1975
c <- 0.05
fv <- 100
m <- 2
n <- 2
cr <- (fv*c)/m
r <- 0.02
v <- (1+(r/m))^-(m*n)
a <- (1-v)/(r/m)
#final output
cr*a+fv*v
cr*a
fv*v
cr*a+fv*v
p <- 106.1975
c <- 0.05
fv <- 100
m <- 2
n <- 2
cr <- (fv*c)/m
r <- 0.01
v <- (1+(r/m))^-(m*n)
a <- (1-v)/(r/m)
#final output
cr*a+fv*v
r1 <- 0.01
r2 <- 0.02
pv1 <- 107.901
pv2 <- 105.8529
p <- 106.1975
top <- pv1-p
bot <- pv1-pv2
(r2-r1)*(top/bot)
(top/bot)
r1+(r2-r1)*(top/bot)
(v1*y1+v2*y2+v3*y3+v4*y4)+(v4*y4)
y1 <- 0.041903
y2 <- 0.043625
y3 <- 0.045184
y4 <- 0.046594
i <- 0.0452
v1 <- (1/(1-i))
v2 <- (1/(1-i))^2
v3 <- (1/(1-i))^3
v4 <- (1/(1-i))^4
(v1*y1+v2*y2+v3*y3+v4*y4)+(v4*y4)
(v4*y4)
(v1*y1+v2*y2+v3*y3+v4*y4)
v1
y1 <- 0.041903
y2 <- 0.043625
y3 <- 0.045184
y4 <- 0.046594
i <- 0.0452
v1 <- (1/(1-i))
v2 <- (1/(1-i)^2)
v3 <- (1/(1-i)^3)
v4 <- (1/(1-i)^4)
(v1*y1+v2*y2+v3*y3+v4*y4)+(v4*y4)
(v4*y4)
(v1*y1+v2*y2+v3*y3+v4*y4)
v1
y1 <- 0.041903
y2 <- 0.043625
y3 <- 0.045184
y4 <- 0.046594
i <- 0.0452
v1 <- (1/(1+i))
v2 <- (1/(1+i)^2)
v3 <- (1/(1+i)^3)
v4 <- (1/(1+i)^4)
(v1*y1+v2*y2+v3*y3+v4*y4)+(v4*y4)
(v4*y4)
(v1*y1+v2*y2+v3*y3+v4*y4)
v1
v1
(1/(1+i)^2)
(1+i)^-2
y1 <- 0.041903
y2 <- 0.043625
y3 <- 0.045184
y4 <- 0.046594
i <- 0.0452
v1 <- (1/(1+i))
v2 <- (1+i)^-2
v3 <- (1+i)^-3
v4 <- (1+i)^-4
v1*y1
(v1*y1)+(v1*y2)+(v3*y3)+(v4*y4)
(v1*y1+v2*y2+v3*y3+v4*y4)
(v1*y1)+(v1*y2)+(v3*y3)+(v4*y4)
v1+v2+v3+v4
v4
y1 <- 0.041903
y2 <- 0.043625
y3 <- 0.045184
y4 <- 0.046594
i <- 0.0452
v1 <- (1/(1+y1))
v2 <- (1+y2)^-2
v3 <- (1+y3)^-3
v4 <- (1+y4)^-4
(v1*y1)+(v1*y2)+(v3*y3)+(v4*y4)
(v4*y4)
v1
(1/(1+y1))
(1+y2)^-2
y1 <- 0.041903
y2 <- 0.043625
y3 <- 0.045184
y4 <- 0.046594
i <- 0.0452
v1 <- (1/(1+i))
v2 <- (1+i)^-2
v3 <- (1+i)^-3
v4 <- (1+i)^-4
(v1*y1)+(v1*y2)+(v3*y3)+(v4*y4)
(v1*y1+v2*y2+v3*y3+v4*y4)+(v4*y4)
# (v1*y1)+(v1*y2)+(v3*y3)+(v4*y4)
#
# (v1*y1+v2*y2+v3*y3+v4*y4)+(v4*y4)
v1+v2+v3+v4
y1 <- 0.041903
y2 <- 0.043625
y3 <- 0.045184
y4 <- 0.046594
i <- 0.0452
v1 <- (1/(1+y1))
v2 <- (1+y2)^-2
v3 <- (1+y3)^-3
v4 <- (1+y4)^-4
# (v1*y1)+(v1*y2)+(v3*y3)+(v4*y4)
#
# (v1*y1+v2*y2+v3*y3+v4*y4)+(v4*y4)
v1+v2+v3+v4
p <- 104.2262
c <- 0.05
fv <- 100
m <- 2
n <- 1
cr <- (fv*c)/m
r <- 0.005
v <- (1+(r/m))^-(m*n)
a <- (1-v)/(r/m)
#final output
cr*a+fv*v
p <- 104.2262
c <- 0.05
fv <- 100
m <- 2
n <- 1
cr <- (fv*c)/m
r <- 0.01
v <- (1+(r/m))^-(m*n)
a <- (1-v)/(r/m)
#final output
cr*a+fv*v
cr
a
v
r1+(r2-r1)*(top/bot)
r1 <- 0.005
r2 <- 0.01
pv1 <- 104.4832
pv2 <- 103.9702
p <- 104.2262
top <- pv1-p
bot <- pv1-pv2
r1+(r2-r1)*(top/bot)
z <- m*n
i <- 0.0075
m <- 2
n <- 0.5
z <- m*n
(1+(i/m))^-z
i <- 0.0075
m <- 2
n <- 0.5
z <- m*n
v1 <- (1+(i/m))^-z
n <- 1
z <- m*n
v2 <- (1+(i/m))^-z
0.969932
0.969932+0.938946+0.907192
1-0.907192
(1-0.907192)/(0.969932+0.938946+0.907192)
(v0+v1)
i <- 0.0075
m <- 2
#half year
n <- 0.5
z <- m*n
v0 <- (1+(i/m))^-z
#full year
n <- 1
z <- m*n
v1 <- (1+(i/m))^-z
(v0+v1)
1-v0
(1-v0)/(v0+v1)
z
0.0075/2
0.00375+1
zz <- 0.00375+1
zz^-1
v0
v1
(1-v1)/(v0+v1)
1-0.992542
(1-0.992542)/(v0+v1)
(1-v1)/(v0+v1)
v0
v1
n <- 1.5
z <- m*n
i <- 0.0185
v2 <- (1+(i/m))^-z
#2
n <- 2
z <- m*n
v3 <- (1+(i/m))^-z
v2
0.0185/2
1+)0.0185/2)
1+())0.0185/2)
1+(0.0185/2)
zz <- 1+(0.0185/2)
2*1.5
zz^-3
n <- 2
z <- m*n
v3 <- (1+(i/m))^-z
z
v3
v0+v1+v2+v3
1-v3
source('~/.active-rstudio-document', echo=TRUE)
v0
v1
v2
v3
for(i in 1:10){
m <- n-1
eqn <- (1-(5/6)^n)-(1-(5/6)^m)
print(eqn)
}
for(n in 1:10){
m <- n-1
eqn <- (1-(5/6)^n)-(1-(5/6)^m)
print(eqn)
}
for(n in 1000){
m <- n-1
eqn <- (1-(5/6)^n)-(1-(5/6)^m)
print(eqn)
}
for(n in 100){
m <- n-1
eqn <- (1-(5/6)^n)-(1-(5/6)^m)
print(eqn)
}
eqn <- x(((5/6)^(x-1))-((5/6)^x))
cumulative_prob <- function(
x
) {
x(((5/6)^(x-1))-((5/6)^x))
}
cumulative_prob(6)
cumulative_prob <- function(
x
) {
x(((5/6)^(x-1))-((5/6)^x))
}
cumulative_prob
cumulative_prob(6)
x
cumulative_prob <- function(
x
) {
x*(((5/6)^(x-1))-((5/6)^x))
}
cumulative_prob(6)
for(i in 1:10) {
cumulative_prob(6)
}
cumulative_prob <- function(
x
) {
output <- x*(((5/6)^(x-1))-((5/6)^x))
print(output)
}
for(i in 1:10) {
cumulative_prob(6)
}
for(i in 1:10) {
cumulative_prob(i)
}
val <- numeric()
for(n in 1:1000){
m <- n-1
eqn <- (1-(5/6)^n)-(1-(5/6)^m)
val <- append(val, eqn)
}
val
expected <- numeric()
for(i in 1:1000) {
expected <- append(expected, i*val[i])
}
sum(expected)
val <- numeric()
for(n in 1:1000){
m <- n-1
eqn <- (1-(36/100)^n)-(1-(36/100)^m)
val <- append(val, eqn)
}
val
## calc expected value
expected <- numeric()
for(i in 1:1000) {
expected <- append(expected, i*val[i])
}
sum(expected)
### 25% chance
val <- numeric()
for(n in 1:1000){
m <- n-1
eqn <- (1-(75/100)^n)-(1-(75/100)^m)
val <- append(val, eqn)
}
## calc expected value
expected <- numeric()
for(i in 1:1000) {
expected <- append(expected, i*val[i])
}
sum(expected)
delta <- 15
k <- 11:15
e
exp
exp(1)
ex <- exp(1)
11!
factorial(1)
factorial(10)
delta <- 15
k <- 11:15
ex <- exp(1)
out <- numeric(0)
for(i in k) {
a <- ex^-delta
b <- delta^i
c <- factorial(i)
out <- append(out, (a*b)/c)
}
sum(out)
sessionInfo()
set.seed(251)
sample(100, 50, replace = TRUE)
set.seed(251)
sample(100, 50, replace = TRUE)
set.seed(251)
sample(100, 50, replace = TRUE)
set.seed(251)
sample(100, 50, replace = TRUE)
set.seed(251)
sample(100, 50, replace = TRUE)
set.seed(251)
sample(100, 50, replace = TRUE)
install.packages('memuse')
memuse::Sys.meminfo()
setwd("T:/VS Code/nlp-playground/pq_scraper")
pqs = read.csv('test.csv')
pq
pqs
library(dplyr)
pqs = read.csv('test.csv') %>% dplyr::as_tibble()
pqs
pqs
library(stringr)
pqs %>%
dplyr::filter(is.na(question))
pqs %>%
dplyr::filter(question == "")
pqs %>%
dplyr::filter(is.na(answer) | answer == "")
pqs %>%
dplyr::filter(is.na(answer) | answer == "") %>%
dplyr::pull(url)
pqs %>%
dplyr::mutate(
str_len = str_length(question)
)
pqs %>%
dplyr::mutate(
str_len = str_length(question)
) %>%
arrange(str_len)
pqs %>%
dplyr::mutate(
str_len = str_length(question)
) %>%
arrange(str_len) %>%
View()
pqs %>%
dplyr::mutate(
str_len = str_length(question)
) %>%
arrange(str_len) %>%
pull(url)
pqs %>%
dplyr::mutate(
str_len = str_length(question)
) %>%
arrange(str_len) %>%
pull(url) %>%
head(5)
pqs %>%
dplyr::group_by(url) %>%
dplyr::count()
pqs %>%
dplyr::group_by(url) %>%
dplyr::count() %>%
dplyr::filter(n > 1)
library(dplyr)
library(stringr)
pqs = read.csv('test.csv') %>% dplyr::as_tibble()
pqs
pqs %>%
dplyr::group_by(url) %>%
dplyr::count() %>%
dplyr::filter(n > 1)
pqs$url
length(pqs$url)
length(pqs$url) == length(unique(pqs$url))
pqs %>%
dplyr::filter(is.na(answer) | answer == "") %>%
dplyr::pull(url)
pqs
pqs %>%
dplyr::filter(is.na(answer) | answer == "")
pqs %>%
dplyr::mutate(
str_len = str_length(question)
) %>%
arrange(str_len) %>%
pull(url) %>%
head(5)
pqs %>%
dplyr::mutate(
str_len = str_length(question)
) %>%
arrange(str_len) %>% View()
pqs %>%
dplyr::mutate(
str_len = str_length(question)
) %>%
arrange(str_len) %>%
pull(url) %>%
head(5)
pqs %>%
dplyr::filter(is.na(answer) | answer == "") %>%
dplyr::pull(url)
